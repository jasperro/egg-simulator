[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://byl5s46iwul76"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_mav4s"]

[sub_resource type="VisualShaderNodeTexture" id="2"]
output_port_for_preview = 0
expanded_output_ports = [0]
source = 1
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id="3"]
input_name = "screen_uv"

[resource]
code = "shader_type canvas_item;
uniform sampler2D screen_tex_frg_2 : hint_screen_texture;



void fragment() {
// Input:3
	vec2 n_out3p0 = SCREEN_UV;


	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(screen_tex_frg_2, n_out3p0);


	vec3 n_out12p0;
// ColorFunc:12
	{
		vec3 c = vec3(n_out2p0.xyz);
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out12p0 = vec3(max2, max2, max2);
	}


// Output:0
	COLOR.rgb = n_out12p0;


}
"
graph_offset = Vector2(-373.205, -69.5581)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(780, 320)
nodes/fragment/2/node = SubResource("2")
nodes/fragment/2/position = Vector2(-40, 300)
nodes/fragment/3/node = SubResource("3")
nodes/fragment/3/position = Vector2(-500, 360)
nodes/fragment/12/node = SubResource("VisualShaderNodeColorFunc_mav4s")
nodes/fragment/12/position = Vector2(400, 320)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 0, 2, 0, 12, 0, 12, 0, 0, 0)
